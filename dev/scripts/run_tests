#!/bin/bash

for argument in "$@"
do
  [[ "$argument" =~ \-\-type=(.*) ]] && test_type=${BASH_REMATCH[1]}
done

case $test_type in
  unit)
    echo -e "\033[94m┌          ┐"
    echo -e "\033[94m╡UNIT TESTS╞═══════════════════════════════════════════════════════════════════"
    echo -e "\033[94m└          ┘\033[0m"
    ;;
  perf)
    echo -e "\033[94m┌                 ┐"
    echo -e "\033[94m╡PERFORMANCE TESTS╞════════════════════════════════════════════════════════════"
    echo -e "\033[94m└                 ┘\033[0m"
    ;;
  "")
    echo "[ERROR] Provide a test type with --type="
    exit 1
    ;;
  *)
    echo "[ERROR] $test_type is not a valid test type"
    exit 1
esac

errors=0
for argument in "$@"
do
  [[ "$argument" =~ \-\-type=(.*) ]] || { 
    echo
    echo -e "\033[94m$argument\033[0m"
    ./$argument
    errors=$(($errors + $?))
  }
done

echo -e "\033[94m═══════════════════════════════════════════════════════════════════════════════\033[0m"
[[ $errors -eq 0 ]] && {
  echo -e "  \033[32;1mPASSED\033[0m"
  exit 0
} || { 
  echo -e "  \033[31;1mFAILED ($errors)\033[0m"
  echo
  exit 1
}
